// <auto-generated />
using System;
using EFDataAccessLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDataAccessLibrary.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220523084246_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EFDataAccessLibrary.Data.Announcement", b =>
                {
                    b.Property<int>("AnnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abstract")
                        .HasColumnType("longtext");

                    b.Property<bool>("Alert")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Repeats")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AnnId");

                    b.HasAlternateKey("Title");

                    b.HasIndex("UserId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.Preference", b =>
                {
                    b.Property<int>("PreferenceId")
                        .HasColumnType("int");

                    b.Property<string>("BackupMail")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CurrentYear")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EnrolmentYear")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("InBrowser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InMail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InPhone")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PauseAlert")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PauseOneDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PauseOneHour")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("PreferenceId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.Announcement", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Data.User", "User")
                        .WithMany("Announcements")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.Preference", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Data.User", "User")
                        .WithOne("Preferences")
                        .HasForeignKey("EFDataAccessLibrary.Data.Preference", "PreferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.User", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Preferences");
                });
#pragma warning restore 612, 618
        }
    }
}
