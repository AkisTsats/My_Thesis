@inject UsersRepository _usersRepository

@using CeidAnnouncementManager.Services
@using Common
@using DTOs.Data;
@using Microsoft.AspNetCore.Components.Authorization

<MudNavMenu Style="--: brown">
    <MudNavLink Href="/" Match="NavLinkMatch.All" Class="menu-item">Ανακοινώσεις</MudNavLink>
    <AuthorizeView>
        <Authorized>
            @if (_permissions.HasFlag(Permissions.ReceivesAnnouncements))
            {
                <MudNavLink Href="/AnnouncementsForMe" Match="NavLinkMatch.Prefix" Class="menu-item">Ανακοινώσεις για εμένα</MudNavLink>
            }
            @if (_permissions.HasFlag(Permissions.ManageAnnouncements))
            {
                <MudNavLink Href="/AnnouncementsCreatedByMe" Match="NavLinkMatch.Prefix" Class="menu-item">Δημιουργημένες από εμένα</MudNavLink>
                <MudNavLink Href="/createannouncement" Match="NavLinkMatch.Prefix" Class="menu-item">Δημιουργία ανακοίνωσης</MudNavLink>
            }
            <MudNavLink Href="/usersettings" Match="NavLinkMatch.Prefix" Class="menu-item">Οι ρυθμίσεις μου</MudNavLink>
        </Authorized>
    </AuthorizeView>
</MudNavMenu>

<style>
    .menu-item {
        color: #FFF;
    }
    .menu-item :hover {
        color: #000 !important;
        font-weight: bold;
    }
</style>

@code {

    private Permissions _permissions = Permissions.NoPermissions;

    protected override async Task OnInitializedAsync()
    {
        var user = await _usersRepository.GetMe();

        if (!Common.RoleToPermissionMapping.TryGetValue(user.Role, out _permissions))
        {
            _permissions = Permissions.NoPermissions;
        }
    }
}
