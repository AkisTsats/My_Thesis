@page "/createannouncement"
@inject HttpClient Http
@inject NavigationManager UriHelper
@using System.Net.Http
@using System.Net.Http.Json
@using System.Text.Json
@using System.Text.Json.Serialization;
@using DTOs.Data;
@using static DTOs.Common.Helpers;
@using DTOs.API.Responses;

<MudText Typo="Typo.h3">CreateAnnouncement</MudText>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm Model="@postBody">
                <MudTextField T="string" Label="Title" Required="true" @bind-Value="postBody.Title" />

                <MudTextField T="string" Label="Abstract" @bind-Value="postBody.Abstract" Required="true" />
                <MudTextField T="string" Label="Body" @bind-Value="postBody.Body" Lines="30" />
                @if (permissions2.SOS == true)
                {
                    <div class="d-flex align-center justify-space-between mt-6">
                        <MudCheckBox T="bool" Class="ml-n2" @bind-Checked="postBody.Alert" Label="SOS" />
                    </div>
                }


            </MudForm>
            <AddFile></AddFile>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="PostOnAPI">Create Announcement</MudButton>
        </MudPaper>

    </MudItem>
</MudGrid>


@code {

    //public class annmodel
    //{
    //    public string Title { get; set; }
    //    public string Abstract { get; set; }
    //    public string Body { get; set; }
    //    public DateTime Date { get; set; }
    //    public bool Alert { get; set; }
    //}

    //annmodel mymod = new annmodel();

    AnnouncementDTO postBody = new AnnouncementDTO();

    //TODO add form validation and error handling
    //TOADD postBody.Author 


    public async Task PostOnAPI()
    {
        postBody.Author = "akis";
        postBody.AnnID = 0;
        postBody.Date = DateTime.Now;

        var post = postBody.SerializeMethod<AnnouncementDTO>();

        Console.WriteLine(post);

        await Http.PostAsJsonAsync("https://localhost:5001/api/Announcement/CreateAnnouncement", postBody);

    }




    private PermissionsDTO permissions = new DTOs.Data.PermissionsDTO
        {
            //Προσομοίωση φοιτητή
            canAcceptAnn = false,
            canAddCategories = true,
            canAddSubjects = true,
            canSeeStats = false,
            canDeleteAllAnn = false,
            canDeleteMyAnn = true,
            canEditAllAnn = false,
            canEditMyAnn = true,
            canEditMySubjects = true,
            canEditMyYears = true,
            canEditNotifications = true,
            canPostAnn = true,
            canPostInfo = true,
            canSeeAllAnn = false,
            canSeeMyAnn = true,
            canSeePubAnn = true,
            selectCategory = false,
            selectSubject = false,
            SOS = false,
        };

    private PermissionsDTO permissions4 = new DTOs.Data.PermissionsDTO
        {
            //Προσομοίωση Ελεγκτή-φοιτητή
            canAcceptAnn = true,
            canAddCategories = true,
            canAddSubjects = true,
            canSeeStats = false,
            canDeleteAllAnn = false,
            canDeleteMyAnn = true,
            canEditAllAnn = true,
            canEditMyAnn = true,
            canEditMySubjects = true,
            canEditMyYears = true,
            canEditNotifications = true,
            canPostAnn = true,
            canPostInfo = true,
            canSeeAllAnn = true,
            canSeeMyAnn = true,
            canSeePubAnn = true,
            selectCategory = false,
            selectSubject = false,
            SOS = true,
        };

    private PermissionsDTO permissions2 = new DTOs.Data.PermissionsDTO
        {
            //Προσομοίωση καθηγητή
            canAcceptAnn = false,
            canAddCategories = true,
            canAddSubjects = true,
            canSeeStats = false,
            canDeleteAllAnn = false,
            canDeleteMyAnn = true,
            canEditAllAnn = false,
            canEditMyAnn = true,
            canEditMySubjects = false,
            canEditMyYears = false,
            canEditNotifications = false,
            canPostAnn = true,
            canPostInfo = true,
            canSeeAllAnn = false,
            canSeeMyAnn = true,
            canSeePubAnn = true,
            selectCategory = true,
            selectSubject = true,
            SOS = true,
        };

    private PermissionsDTO permissions3 = new DTOs.Data.PermissionsDTO
        {
            //Προσομοίωση διαχειριστή
            canAcceptAnn = true,
            canAddCategories = true,
            canAddSubjects = true,
            canSeeStats = true,
            canDeleteAllAnn = true,
            canDeleteMyAnn = true,
            canEditAllAnn = true,
            canEditMyAnn = true,
            canEditMySubjects = true,
            canEditMyYears = true,
            canEditNotifications = true,
            canPostAnn = true,
            canPostInfo = true,
            canSeeAllAnn = true,
            canSeeMyAnn = true,
            canSeePubAnn = true,
            selectCategory = true,
            selectSubject = true,
            SOS = true,
        };
}