// <auto-generated />
using System;
using EFDataAccessLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFDataAccessLibrary.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EFDataAccessLibrary.Data.Announcement", b =>
                {
                    b.Property<int>("AnnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abstract")
                        .HasColumnType("longtext");

                    b.Property<bool>("Alert")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AnnID");

                    b.HasAlternateKey("Title");

                    b.HasIndex("UserID");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.Preference", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<bool>("InBrowser")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InMail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("InPhone")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PauseAlert")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PauseOneDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PauseOneHour")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserID");

                    b.ToTable("Preference");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<int>("EnrollmentYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PrimaryEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.Announcement", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Data.User", "User")
                        .WithMany("Announcements")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.Preference", b =>
                {
                    b.HasOne("EFDataAccessLibrary.Data.User", null)
                        .WithOne("Preferences")
                        .HasForeignKey("EFDataAccessLibrary.Data.Preference", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFDataAccessLibrary.Data.User", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Preferences");
                });
#pragma warning restore 612, 618
        }
    }
}
